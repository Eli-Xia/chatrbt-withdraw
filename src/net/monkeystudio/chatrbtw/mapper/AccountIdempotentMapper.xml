<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="net.monkeystudio.chatrbtw.mapper.UserIdempotentMapper">
    <resultMap id="baseResultMap" type="net.monkeystudio.chatrbtw.entity.AccountIdempotent">
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userid" jdbcType="INTEGER" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="account_type" property="accountType" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        `id`, `state`, `account_type`,`account_id`
    </sql>

    <update id="updateState" >
        update e_account_idempotent set
            state = #{state}
                     WHERE id = #{id}
    </update>

    <insert id="insert" parameterType="net.monkeystudio.chatrbtw.entity.AccountIdempotent" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
            e_account_idempotent (`state`, `account_id`,`account_type`)
        SELECT
            #{state} , #{accountId} , #{accountType}
        FROM DUAL WHERE NOT EXISTS  (
            SELECT
                `state`, `account_id` , `account_type`
            FROM
                e_account_idempotent
            WHERE
                `state` = #{state}
            AND
                `account_id` = #{accountId}
            AND
                `account_type` = #{accountType}
        )
    </insert>


</mapper>
